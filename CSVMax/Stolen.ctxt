#BlueJ class context
comment0.target=Stolen
comment1.params=parser
comment1.target=org.apache.commons.csv.CSVRecord\ coldestHourInFile(org.apache.commons.csv.CSVParser)
comment1.text=The\ method\ returns\ the\ CSVRecord\ with\ the\ coldest\ temperature\ in\ the\ file\ and\ thus\ all\ the\ information\ about\ the\ coldest\ temperature
comment10.params=
comment10.target=void\ testLowestHumidityInManyFiles()
comment11.params=parser
comment11.target=double\ averageTemperatureInFile(org.apache.commons.csv.CSVParser)
comment12.params=
comment12.target=void\ testAverageTemperatureInFile()
comment13.params=parser\ value
comment13.target=double\ averageTemperatureWithHighHumidityInFile(org.apache.commons.csv.CSVParser,\ int)
comment14.params=
comment14.target=void\ testAverageTemperatureWithHighHumidityInFile()
comment15.params=args
comment15.target=void\ main(java.lang.String[])
comment2.params=
comment2.target=void\ testColdestHourInFile()
comment2.text=The\ method\ tests\ coldestHourInFile\ and\ prints\ out\ information\ about\ that\ coldest\ temperature
comment3.params=currentRow\ smallestSoFar
comment3.target=org.apache.commons.csv.CSVRecord\ getSmallestOfTwo(org.apache.commons.csv.CSVRecord,\ org.apache.commons.csv.CSVRecord)
comment4.params=
comment4.target=java.lang.String\ fileWithColdestTemperature()
comment5.params=
comment5.target=void\ testFileWithColdestTemperature()
comment6.params=parser
comment6.target=org.apache.commons.csv.CSVRecord\ lowestHumidityInFile(org.apache.commons.csv.CSVParser)
comment7.params=currentRow\ smallestSoFar
comment7.target=org.apache.commons.csv.CSVRecord\ getSmallestHumidityOfTwo(org.apache.commons.csv.CSVRecord,\ org.apache.commons.csv.CSVRecord)
comment8.params=
comment8.target=void\ testlowestHumidityInFile()
comment9.params=
comment9.target=org.apache.commons.csv.CSVRecord\ lowestHumidityInManyFiles()
numComments=16
